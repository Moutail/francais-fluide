// Script pour rÃ©initialiser le rate limiting
const rateLimit = require('express-rate-limit');

console.log('ğŸ”„ RÃ©initialisation du rate limiting...');

// CrÃ©er un nouveau limiter avec des paramÃ¨tres trÃ¨s permissifs
const newLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 minutes
  max: 10000, // 10000 requÃªtes par 15 minutes
  message: {
    error: 'Trop de requÃªtes depuis cette IP, rÃ©essayez plus tard.',
    retryAfter: 900
  },
  standardHeaders: true,
  legacyHeaders: false,
  skip: (req) => {
    if (process.env.NODE_ENV === 'development') {
      console.log(`[RATE LIMIT] Skipping for: ${req.method} ${req.path}`);
      return true;
    }
    return false;
  }
});

console.log('âœ… Rate limiting rÃ©initialisÃ© avec des paramÃ¨tres permissifs');
console.log('ğŸ“Š Configuration:');
console.log('   - FenÃªtre: 15 minutes');
console.log('   - Max requÃªtes: 10000');
console.log('   - Mode dÃ©veloppement: Rate limiting dÃ©sactivÃ©');

// Si on est en mode dÃ©veloppement, on peut aussi vider le store
if (process.env.NODE_ENV === 'development') {
  console.log('ğŸ”§ Mode dÃ©veloppement dÃ©tectÃ© - Rate limiting complÃ¨tement dÃ©sactivÃ©');
}

module.exports = newLimiter;